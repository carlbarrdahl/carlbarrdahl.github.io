{"version":3,"sources":["webpack:///./src/templates/project-page.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js"],"names":["ProjectPageTemplate","render","project","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","frontmatter","description","excerpt","style","display","alignItems","margin","href","url","target","github","status","tags","join","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","_this$props","isRoot","__PATH_PREFIX__","fontFamily","marginLeft","marginRight","maxWidth","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-templates-project-page-js-ae8e7431a13d2f0db445.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\n\nclass ProjectPageTemplate extends React.Component {\n  render() {\n    const project = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={project.frontmatter.title} description={project.excerpt} />\n        <div style={{ display: \"flex\", alignItems: \"baseline\" }}>\n          <h1 style={{ margin: 0 }}>{project.frontmatter.title}</h1>\n        </div>\n        <div>\n          <a href={project.frontmatter.url} target=\"_blank\">\n            {project.frontmatter.url}\n          </a>\n        </div>\n        <div>\n          <a href={project.frontmatter.github} target=\"_blank\">\n            {project.frontmatter.github}\n          </a>\n        </div>\n        <div>{project.frontmatter.status}</div>\n        <div>{(project.frontmatter.tags || []).join(\", \")}</div>\n\n        <div dangerouslySetInnerHTML={{ __html: project.html }} />\n      </Layout>\n    )\n  }\n}\n\nexport default ProjectPageTemplate\n\nexport const pageQuery = graphql`\n  query ProjectBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        status\n        url\n        github\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\"\n\nconst typography = new Typography({\n  baseFontSize: \"18px\",\n  baseLineHeight: 1.666,\n  headerFontFamily: [ \"IBM Plex Mono\", \"console\" ],\n  bodyFontFamily: [ \"IBM Plex Sans\", \"sans-serif\" ]\n  // See below for the full list of options.\n})\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const isRoot = location.pathname === `${__PATH_PREFIX__}/`\n    return (\n      <div\n        style={{\n          fontFamily: `IBM Plex Mono, console`,\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(36),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`\n        }}\n      >\n        {(!isRoot && (\n          <header>\n            <Link to=\"/\">Back</Link>\n          </header>\n        )) ||\n          null}\n        {children}\n        <footer>\n          <a href=\"https://www.github.com/carlbarrdahl\" target=\"_blank\">\n            GitHub\n          </a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}